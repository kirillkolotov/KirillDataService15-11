//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClient.ServiceReferenceUFC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="User")]
    [System.SerializableAttribute()]
    public class UserList : System.Collections.Generic.List<WpfClient.ServiceReferenceUFC.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class User : WpfClient.ServiceReferenceUFC.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceUFC.Country))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceUFC.Division))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceUFC.Fighter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WpfClient.ServiceReferenceUFC.User))]
    public partial class BaseEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Country : WpfClient.ServiceReferenceUFC.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Division", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Division : WpfClient.ServiceReferenceUFC.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxweightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinweightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maxweight {
            get {
                return this.MaxweightField;
            }
            set {
                if ((this.MaxweightField.Equals(value) != true)) {
                    this.MaxweightField = value;
                    this.RaisePropertyChanged("Maxweight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Minweight {
            get {
                return this.MinweightField;
            }
            set {
                if ((this.MinweightField.Equals(value) != true)) {
                    this.MinweightField = value;
                    this.RaisePropertyChanged("Minweight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fighter", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Fighter : WpfClient.ServiceReferenceUFC.BaseEntity {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.ServiceReferenceUFC.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisqualificationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.ServiceReferenceUFC.Division DivisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FightTimeAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FightingStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KnockdownAvgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LossesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReachField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesAbsorbedPerMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesAttemptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesClinchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesDefenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesGroundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesHeadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesLandedPerMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesLandedTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesLegField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SigStrikesStandingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubmissionAvgPer15MinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TakedownAttemptedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TakedownAvgPer15MinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TakedownDefenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TakedownLandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinByDecisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinByKnockoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinBySubmissionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.ServiceReferenceUFC.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Disqualifications {
            get {
                return this.DisqualificationsField;
            }
            set {
                if ((this.DisqualificationsField.Equals(value) != true)) {
                    this.DisqualificationsField = value;
                    this.RaisePropertyChanged("Disqualifications");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.ServiceReferenceUFC.Division Division {
            get {
                return this.DivisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionField, value) != true)) {
                    this.DivisionField = value;
                    this.RaisePropertyChanged("Division");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FightTimeAvg {
            get {
                return this.FightTimeAvgField;
            }
            set {
                if ((this.FightTimeAvgField.Equals(value) != true)) {
                    this.FightTimeAvgField = value;
                    this.RaisePropertyChanged("FightTimeAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FightingStyle {
            get {
                return this.FightingStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.FightingStyleField, value) != true)) {
                    this.FightingStyleField = value;
                    this.RaisePropertyChanged("FightingStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KnockdownAvg {
            get {
                return this.KnockdownAvgField;
            }
            set {
                if ((this.KnockdownAvgField.Equals(value) != true)) {
                    this.KnockdownAvgField = value;
                    this.RaisePropertyChanged("KnockdownAvg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Losses {
            get {
                return this.LossesField;
            }
            set {
                if ((this.LossesField.Equals(value) != true)) {
                    this.LossesField = value;
                    this.RaisePropertyChanged("Losses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Reach {
            get {
                return this.ReachField;
            }
            set {
                if ((this.ReachField.Equals(value) != true)) {
                    this.ReachField = value;
                    this.RaisePropertyChanged("Reach");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesAbsorbedPerMin {
            get {
                return this.SigStrikesAbsorbedPerMinField;
            }
            set {
                if ((this.SigStrikesAbsorbedPerMinField.Equals(value) != true)) {
                    this.SigStrikesAbsorbedPerMinField = value;
                    this.RaisePropertyChanged("SigStrikesAbsorbedPerMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesAttempted {
            get {
                return this.SigStrikesAttemptedField;
            }
            set {
                if ((this.SigStrikesAttemptedField.Equals(value) != true)) {
                    this.SigStrikesAttemptedField = value;
                    this.RaisePropertyChanged("SigStrikesAttempted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesBody {
            get {
                return this.SigStrikesBodyField;
            }
            set {
                if ((this.SigStrikesBodyField.Equals(value) != true)) {
                    this.SigStrikesBodyField = value;
                    this.RaisePropertyChanged("SigStrikesBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesClinch {
            get {
                return this.SigStrikesClinchField;
            }
            set {
                if ((this.SigStrikesClinchField.Equals(value) != true)) {
                    this.SigStrikesClinchField = value;
                    this.RaisePropertyChanged("SigStrikesClinch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesDefence {
            get {
                return this.SigStrikesDefenceField;
            }
            set {
                if ((this.SigStrikesDefenceField.Equals(value) != true)) {
                    this.SigStrikesDefenceField = value;
                    this.RaisePropertyChanged("SigStrikesDefence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesGround {
            get {
                return this.SigStrikesGroundField;
            }
            set {
                if ((this.SigStrikesGroundField.Equals(value) != true)) {
                    this.SigStrikesGroundField = value;
                    this.RaisePropertyChanged("SigStrikesGround");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesHead {
            get {
                return this.SigStrikesHeadField;
            }
            set {
                if ((this.SigStrikesHeadField.Equals(value) != true)) {
                    this.SigStrikesHeadField = value;
                    this.RaisePropertyChanged("SigStrikesHead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesLandedPerMin {
            get {
                return this.SigStrikesLandedPerMinField;
            }
            set {
                if ((this.SigStrikesLandedPerMinField.Equals(value) != true)) {
                    this.SigStrikesLandedPerMinField = value;
                    this.RaisePropertyChanged("SigStrikesLandedPerMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesLandedTotal {
            get {
                return this.SigStrikesLandedTotalField;
            }
            set {
                if ((this.SigStrikesLandedTotalField.Equals(value) != true)) {
                    this.SigStrikesLandedTotalField = value;
                    this.RaisePropertyChanged("SigStrikesLandedTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesLeg {
            get {
                return this.SigStrikesLegField;
            }
            set {
                if ((this.SigStrikesLegField.Equals(value) != true)) {
                    this.SigStrikesLegField = value;
                    this.RaisePropertyChanged("SigStrikesLeg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SigStrikesStanding {
            get {
                return this.SigStrikesStandingField;
            }
            set {
                if ((this.SigStrikesStandingField.Equals(value) != true)) {
                    this.SigStrikesStandingField = value;
                    this.RaisePropertyChanged("SigStrikesStanding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubmissionAvgPer15Min {
            get {
                return this.SubmissionAvgPer15MinField;
            }
            set {
                if ((this.SubmissionAvgPer15MinField.Equals(value) != true)) {
                    this.SubmissionAvgPer15MinField = value;
                    this.RaisePropertyChanged("SubmissionAvgPer15Min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TakedownAttempted {
            get {
                return this.TakedownAttemptedField;
            }
            set {
                if ((this.TakedownAttemptedField.Equals(value) != true)) {
                    this.TakedownAttemptedField = value;
                    this.RaisePropertyChanged("TakedownAttempted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TakedownAvgPer15Min {
            get {
                return this.TakedownAvgPer15MinField;
            }
            set {
                if ((this.TakedownAvgPer15MinField.Equals(value) != true)) {
                    this.TakedownAvgPer15MinField = value;
                    this.RaisePropertyChanged("TakedownAvgPer15Min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TakedownDefence {
            get {
                return this.TakedownDefenceField;
            }
            set {
                if ((this.TakedownDefenceField.Equals(value) != true)) {
                    this.TakedownDefenceField = value;
                    this.RaisePropertyChanged("TakedownDefence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TakedownLanded {
            get {
                return this.TakedownLandedField;
            }
            set {
                if ((this.TakedownLandedField.Equals(value) != true)) {
                    this.TakedownLandedField = value;
                    this.RaisePropertyChanged("TakedownLanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WinByDecision {
            get {
                return this.WinByDecisionField;
            }
            set {
                if ((this.WinByDecisionField.Equals(value) != true)) {
                    this.WinByDecisionField = value;
                    this.RaisePropertyChanged("WinByDecision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WinByKnockout {
            get {
                return this.WinByKnockoutField;
            }
            set {
                if ((this.WinByKnockoutField.Equals(value) != true)) {
                    this.WinByKnockoutField = value;
                    this.RaisePropertyChanged("WinByKnockout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WinBySubmission {
            get {
                return this.WinBySubmissionField;
            }
            set {
                if ((this.WinBySubmissionField.Equals(value) != true)) {
                    this.WinBySubmissionField = value;
                    this.RaisePropertyChanged("WinBySubmission");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CountryList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Country")]
    [System.SerializableAttribute()]
    public class CountryList : System.Collections.Generic.List<WpfClient.ServiceReferenceUFC.Country> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DivisionList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Division")]
    [System.SerializableAttribute()]
    public class DivisionList : System.Collections.Generic.List<WpfClient.ServiceReferenceUFC.Division> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FighterList", Namespace="http://schemas.datacontract.org/2004/07/Model", ItemName="Fighter")]
    [System.SerializableAttribute()]
    public class FighterList : System.Collections.Generic.List<WpfClient.ServiceReferenceUFC.Fighter> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceUFC.IServiceUFC")]
    public interface IServiceUFC {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllUsers", ReplyAction="http://tempuri.org/IServiceUFC/GetAllUsersResponse")]
        WpfClient.ServiceReferenceUFC.UserList GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllUsers", ReplyAction="http://tempuri.org/IServiceUFC/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.UserList> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewUser", ReplyAction="http://tempuri.org/IServiceUFC/NewUserResponse")]
        int NewUser(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewUser", ReplyAction="http://tempuri.org/IServiceUFC/NewUserResponse")]
        System.Threading.Tasks.Task<int> NewUserAsync(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateUser", ReplyAction="http://tempuri.org/IServiceUFC/UpdateUserResponse")]
        int UpdateUser(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateUser", ReplyAction="http://tempuri.org/IServiceUFC/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteUser", ReplyAction="http://tempuri.org/IServiceUFC/DeleteUserResponse")]
        int DeleteUser(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteUser", ReplyAction="http://tempuri.org/IServiceUFC/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/Login", ReplyAction="http://tempuri.org/IServiceUFC/LoginResponse")]
        WpfClient.ServiceReferenceUFC.User Login(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/Login", ReplyAction="http://tempuri.org/IServiceUFC/LoginResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.User> LoginAsync(WpfClient.ServiceReferenceUFC.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/FindUsername", ReplyAction="http://tempuri.org/IServiceUFC/FindUsernameResponse")]
        bool FindUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/FindUsername", ReplyAction="http://tempuri.org/IServiceUFC/FindUsernameResponse")]
        System.Threading.Tasks.Task<bool> FindUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllCountries", ReplyAction="http://tempuri.org/IServiceUFC/GetAllCountriesResponse")]
        WpfClient.ServiceReferenceUFC.CountryList GetAllCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllCountries", ReplyAction="http://tempuri.org/IServiceUFC/GetAllCountriesResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.CountryList> GetAllCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewCountry", ReplyAction="http://tempuri.org/IServiceUFC/NewCountryResponse")]
        int NewCountry(WpfClient.ServiceReferenceUFC.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewCountry", ReplyAction="http://tempuri.org/IServiceUFC/NewCountryResponse")]
        System.Threading.Tasks.Task<int> NewCountryAsync(WpfClient.ServiceReferenceUFC.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateCountry", ReplyAction="http://tempuri.org/IServiceUFC/UpdateCountryResponse")]
        int UpdateCountry(WpfClient.ServiceReferenceUFC.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateCountry", ReplyAction="http://tempuri.org/IServiceUFC/UpdateCountryResponse")]
        System.Threading.Tasks.Task<int> UpdateCountryAsync(WpfClient.ServiceReferenceUFC.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteCountry", ReplyAction="http://tempuri.org/IServiceUFC/DeleteCountryResponse")]
        int DeleteCountry(WpfClient.ServiceReferenceUFC.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteCountry", ReplyAction="http://tempuri.org/IServiceUFC/DeleteCountryResponse")]
        System.Threading.Tasks.Task<int> DeleteCountryAsync(WpfClient.ServiceReferenceUFC.Country country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllDivisions", ReplyAction="http://tempuri.org/IServiceUFC/GetAllDivisionsResponse")]
        WpfClient.ServiceReferenceUFC.DivisionList GetAllDivisions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllDivisions", ReplyAction="http://tempuri.org/IServiceUFC/GetAllDivisionsResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.DivisionList> GetAllDivisionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewDivision", ReplyAction="http://tempuri.org/IServiceUFC/NewDivisionResponse")]
        int NewDivision(WpfClient.ServiceReferenceUFC.Division division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewDivision", ReplyAction="http://tempuri.org/IServiceUFC/NewDivisionResponse")]
        System.Threading.Tasks.Task<int> NewDivisionAsync(WpfClient.ServiceReferenceUFC.Division division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateDivision", ReplyAction="http://tempuri.org/IServiceUFC/UpdateDivisionResponse")]
        int UpdateDivision(WpfClient.ServiceReferenceUFC.Division division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateDivision", ReplyAction="http://tempuri.org/IServiceUFC/UpdateDivisionResponse")]
        System.Threading.Tasks.Task<int> UpdateDivisionAsync(WpfClient.ServiceReferenceUFC.Division division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteDivision", ReplyAction="http://tempuri.org/IServiceUFC/DeleteDivisionResponse")]
        int DeleteDivision(WpfClient.ServiceReferenceUFC.Division division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteDivision", ReplyAction="http://tempuri.org/IServiceUFC/DeleteDivisionResponse")]
        System.Threading.Tasks.Task<int> DeleteDivisionAsync(WpfClient.ServiceReferenceUFC.Division division);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllFighters", ReplyAction="http://tempuri.org/IServiceUFC/GetAllFightersResponse")]
        WpfClient.ServiceReferenceUFC.FighterList GetAllFighters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/GetAllFighters", ReplyAction="http://tempuri.org/IServiceUFC/GetAllFightersResponse")]
        System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.FighterList> GetAllFightersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewFighter", ReplyAction="http://tempuri.org/IServiceUFC/NewFighterResponse")]
        int NewFighter(WpfClient.ServiceReferenceUFC.Fighter fighter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/NewFighter", ReplyAction="http://tempuri.org/IServiceUFC/NewFighterResponse")]
        System.Threading.Tasks.Task<int> NewFighterAsync(WpfClient.ServiceReferenceUFC.Fighter fighter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateFighter", ReplyAction="http://tempuri.org/IServiceUFC/UpdateFighterResponse")]
        int UpdateFighter(WpfClient.ServiceReferenceUFC.Fighter fighter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/UpdateFighter", ReplyAction="http://tempuri.org/IServiceUFC/UpdateFighterResponse")]
        System.Threading.Tasks.Task<int> UpdateFighterAsync(WpfClient.ServiceReferenceUFC.Fighter fighter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteFighter", ReplyAction="http://tempuri.org/IServiceUFC/DeleteFighterResponse")]
        int DeleteFighter(WpfClient.ServiceReferenceUFC.Fighter Fighter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUFC/DeleteFighter", ReplyAction="http://tempuri.org/IServiceUFC/DeleteFighterResponse")]
        System.Threading.Tasks.Task<int> DeleteFighterAsync(WpfClient.ServiceReferenceUFC.Fighter Fighter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUFCChannel : WpfClient.ServiceReferenceUFC.IServiceUFC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUFCClient : System.ServiceModel.ClientBase<WpfClient.ServiceReferenceUFC.IServiceUFC>, WpfClient.ServiceReferenceUFC.IServiceUFC {
        
        public ServiceUFCClient() {
        }
        
        public ServiceUFCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUFCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUFCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUFCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfClient.ServiceReferenceUFC.UserList GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.UserList> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public int NewUser(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.NewUser(user);
        }
        
        public System.Threading.Tasks.Task<int> NewUserAsync(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.NewUserAsync(user);
        }
        
        public int UpdateUser(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public int DeleteUser(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.DeleteUser(user);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.DeleteUserAsync(user);
        }
        
        public WpfClient.ServiceReferenceUFC.User Login(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.User> LoginAsync(WpfClient.ServiceReferenceUFC.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool FindUsername(string username) {
            return base.Channel.FindUsername(username);
        }
        
        public System.Threading.Tasks.Task<bool> FindUsernameAsync(string username) {
            return base.Channel.FindUsernameAsync(username);
        }
        
        public WpfClient.ServiceReferenceUFC.CountryList GetAllCountries() {
            return base.Channel.GetAllCountries();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.CountryList> GetAllCountriesAsync() {
            return base.Channel.GetAllCountriesAsync();
        }
        
        public int NewCountry(WpfClient.ServiceReferenceUFC.Country country) {
            return base.Channel.NewCountry(country);
        }
        
        public System.Threading.Tasks.Task<int> NewCountryAsync(WpfClient.ServiceReferenceUFC.Country country) {
            return base.Channel.NewCountryAsync(country);
        }
        
        public int UpdateCountry(WpfClient.ServiceReferenceUFC.Country country) {
            return base.Channel.UpdateCountry(country);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCountryAsync(WpfClient.ServiceReferenceUFC.Country country) {
            return base.Channel.UpdateCountryAsync(country);
        }
        
        public int DeleteCountry(WpfClient.ServiceReferenceUFC.Country country) {
            return base.Channel.DeleteCountry(country);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCountryAsync(WpfClient.ServiceReferenceUFC.Country country) {
            return base.Channel.DeleteCountryAsync(country);
        }
        
        public WpfClient.ServiceReferenceUFC.DivisionList GetAllDivisions() {
            return base.Channel.GetAllDivisions();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.DivisionList> GetAllDivisionsAsync() {
            return base.Channel.GetAllDivisionsAsync();
        }
        
        public int NewDivision(WpfClient.ServiceReferenceUFC.Division division) {
            return base.Channel.NewDivision(division);
        }
        
        public System.Threading.Tasks.Task<int> NewDivisionAsync(WpfClient.ServiceReferenceUFC.Division division) {
            return base.Channel.NewDivisionAsync(division);
        }
        
        public int UpdateDivision(WpfClient.ServiceReferenceUFC.Division division) {
            return base.Channel.UpdateDivision(division);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDivisionAsync(WpfClient.ServiceReferenceUFC.Division division) {
            return base.Channel.UpdateDivisionAsync(division);
        }
        
        public int DeleteDivision(WpfClient.ServiceReferenceUFC.Division division) {
            return base.Channel.DeleteDivision(division);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDivisionAsync(WpfClient.ServiceReferenceUFC.Division division) {
            return base.Channel.DeleteDivisionAsync(division);
        }
        
        public WpfClient.ServiceReferenceUFC.FighterList GetAllFighters() {
            return base.Channel.GetAllFighters();
        }
        
        public System.Threading.Tasks.Task<WpfClient.ServiceReferenceUFC.FighterList> GetAllFightersAsync() {
            return base.Channel.GetAllFightersAsync();
        }
        
        public int NewFighter(WpfClient.ServiceReferenceUFC.Fighter fighter) {
            return base.Channel.NewFighter(fighter);
        }
        
        public System.Threading.Tasks.Task<int> NewFighterAsync(WpfClient.ServiceReferenceUFC.Fighter fighter) {
            return base.Channel.NewFighterAsync(fighter);
        }
        
        public int UpdateFighter(WpfClient.ServiceReferenceUFC.Fighter fighter) {
            return base.Channel.UpdateFighter(fighter);
        }
        
        public System.Threading.Tasks.Task<int> UpdateFighterAsync(WpfClient.ServiceReferenceUFC.Fighter fighter) {
            return base.Channel.UpdateFighterAsync(fighter);
        }
        
        public int DeleteFighter(WpfClient.ServiceReferenceUFC.Fighter Fighter) {
            return base.Channel.DeleteFighter(Fighter);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFighterAsync(WpfClient.ServiceReferenceUFC.Fighter Fighter) {
            return base.Channel.DeleteFighterAsync(Fighter);
        }
    }
}
